apiVersion: v1
kind: Template
metadata:
  name: package-releases-multiplexer-deployment
  annotations:
    description: Package Releases Multiplexer
    openshift.io/display-name: "Package Releases Multiplexer"
    version: 0.1.0
    tags: thoth,ai-stacks,package-releases
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: Package Releases Multiplexer
    template.openshift.io/provider-display-name: Red Hat, Inc.
  labels:
    template: package-releases-multiplexer
    app: package-releases
    component: multiplexer

parameters:
  - description: Ultrahook API key
    name: ULTRAHOOK_API_KEY
    required: true
  - description: Ultrahook subdomain
    name: ULTRAHOOK_SUBDOMAIN
    required: true
  - description: Ultrahook host
    name: ULTRAHOOK_TARGET_HOST
    required: true

objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: package-releases
      labels:
        app: package-releases
        component: multiplexer
    data:
      ULTRAHOOK_API_KEY: "${ULTRAHOOK_API_KEY}"
      ULTRAHOOK_SUBDOMAIN: "${ULTRAHOOK_SUBDOMAIN}"
      ULTRAHOOK_TARGET_HOST: "${ULTRAHOOK_TARGET_HOST}"
      ULTRAHOOK_TARGET_PORT: "8080"
      KAFKA_BOOTSTRAP_SERVERS: "kafka.datahub.redhat.com:443"

  - kind: Secret
    apiVersion: v1
    metadata:
      name: datahub-kafka
    type: Opaque
    data:
      data-hub-kafka-ca.crt: >-
        LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMVENDQWhXZ0F3SUJBZ0lKQUo0NVRtT0lkMTZVTUEwR0NTcUdTSWIzRFFFQkN3VUFNQzB4RXpBUkJnTlYKQkFvTUNtbHZMbk4wY21sdGVta3hGakFVQmdOVkJBTU1EV05zZFhOMFpYSXRZMkVnZGpBd0hoY05NVGt3TkRJNQpNakF6TURReFdoY05NakF3TkRJNE1qQXpNRFF4V2pBdE1STXdFUVlEVlFRS0RBcHBieTV6ZEhKcGJYcHBNUll3CkZBWURWUVFEREExamJIVnpkR1Z5TFdOaElIWXdNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF5S2wwTTZIOEhvU1Zwckx3TnBxU1ZIWHRhU1dLVDBycGhNUzRoQnZwTTdJRG9XUU9NcnJMWHVQeAphYVhvUVR4R0pITExpSVFYVExtdGpLMkRYUjZNS0FwVk9LTmkyMlp1VE0vakRmaHd0YXRYckFMKzFzcjAvcmM2CitqWEpaWXFVOVg4cEkycmpvcFlyTUkzQm1CZnE3OWtORFpmcjk4bmtacldwV0RHNjJ0aXhxMUExSGpIbjh3TC8KUnJKdnBtdDZUcHRaek5EWTEzTnorT2I1cFZJdTVnSFdHVWVQejJnT0xkVlVqWk1MMkU3bko3WUF1bVNzdTBzTApISWxobGdDS3N4VFo3YlFma1RJNFkwMmUvZCtuTFlteUNJTEovTjBUTE5YZ1hRd1o1MVNac1dkZXNIRGVzalhrCnJnbzBvekdQcnV3c0VFbEFEK3FuK3hmU3V3bnkzd0lEQVFBQm8xQXdUakFkQmdOVkhRNEVGZ1FVcFdlRzdyTXcKUVlmc05heHBISWtkSGVrSExVUXdId1lEVlIwakJCZ3dGb0FVcFdlRzdyTXdRWWZzTmF4cEhJa2RIZWtITFVRdwpEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW1JcjJMZHFRSE95ejJOWEpzMmRvCm15UVZ1SDRlNlBDYlZmMVRKdGFZY0Q3OUVnaVpaQk9lRUt0ZnNOTVlUak1PUytTaExtTWhhbXJ3U1JEbnZ1c08KUC9oZmZZSUFLb1BmdXJvQmpMMUcvUnFvaFAzNU1hSjlxbWVkdUxjZ1pQWllpWG4zZUxOQ3lFcjZFM2hYUE0wTAo5WUZVYXJXYmh2TVlsUXBaOEhySUdTcDJGNXBNUDRhWUprRGV0WG94Y1B2UG5FdmVMcUo1d3NWeXpLbmN3TjNKCloxMXR5NzJtb3FqSFZLdU1zWGhXWHdvUE9SMzhHazMyRm4zUmord1RuU3M2emVwaGZHQjNJd0NURDZEUjNzbncKazdJTlhLV296UktkenNFZmMzNGVmN054a2xGNmFYdjh2SllLTWZnV042ZTg5TW9CaE1IOW1sWGROd2lMdW1TbgpaQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

  - kind: Route
    apiVersion: v1
    metadata:
      name: package-releases
      annotations:
        kubernetes.io/tls-acme: "true"
      labels:
        app: package-releases
        component: multiplexer
    spec:
      to:
        kind: Service
        name: package-releases-multiplexer

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: package-releases-ultrahook
      labels:
        app: package-releases
        component: ultrahook

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: package-releases-multiplexer
      labels:
        app: package-releases
        component: multiplexer

  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      labels:
        app: package-releases
        component: ultrahook
      name: package-releases-ultrahook
    spec:
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 768Mi
      output:
        to:
          kind: ImageStreamTag
          name: package-releases-ultrahook:latest
      runPolicy: Serial
      source:
        dockerfile: |
          FROM ruby:2.5-slim
          RUN gem install ultrahook

          CMD ultrahook \
            $ULTRAHOOK_SUBDOMAIN http://$ULTRAHOOK_TARGET_HOST:$ULTRAHOOK_TARGET_PORT/webhook
        type: Dockerfile
      strategy:
        type: Docker

  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: package-releases-multiplexer
      labels:
        app: package-releases
        component: multiplexer
    spec:
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 768Mi
      source:
        type: "Git"
        git:
          uri: "https://github.com/goern/package-releases-multiplexer"
          ref: "master"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: s2i-thoth-ubi8-py36:latest
          env:
            - name: ENABLE_PIPENV
              value: "1"
            - name: UPGRADE_PIP_TO_LATEST
              value: ""
      output:
        to:
          kind: ImageStreamTag
          name: package-releases-multiplexer:latest
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
        - type: "Generic"
          generic:
            secretReference:
              name: generic-webhook-secret

  - kind: Service
    apiVersion: v1
    metadata:
      name: package-releases-multiplexer
      labels:
        app: package-releases
        component: multiplexer
    spec:
      selector:
        app: package-releases
        component: multiplexer
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      sessionAffinity: None

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      labels:
        app: package-releases
        component: multiplexer
      name: package-releases-multiplexer
    spec:
      replicas: 1
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 768Mi
      selector:
        app: package-releases
        component: multiplexer
      strategy:
        resources:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: package-releases
            component: multiplexer
        spec:
          containers:
            - name: multiplexer
              image: package-releases-multiplexer:latest
              imagePullPolicy: Always
              env:
                - name: KAFKA_BOOTSTRAP_SERVERS
                  value: "kafka.datahub.redhat.com:443"
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - mountPath: /opt/app-root/src/secrets/
                  name: kafka-cafile
                  readOnly: true
            - name: ultrahook
              image: package-releases-ultrahook:latest
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: package-releases
          volumes:
            - name: kafka-cafile
              secret:
                defaultMode: 420
                secretName: datahub-kafka
          restartPolicy: Always
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - multiplexer
            from:
              kind: ImageStreamTag
              name: package-releases-multiplexer:latest
          type: ImageChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ultrahook
            from:
              kind: ImageStreamTag
              name: package-releases-ultrahook:latest
          type: ImageChange
